Git 是一个分布式版本控制系统。
	版本控制：记录文件内容变化，即修改历史记录，能够查好看历史版本，方便版本切换。有利于团队协作。
	版本控制工具：
		集中式版本控制工具：如SVN,CVS,VSS——通过中央服务器，一个团队修改的是同一套代码；是单线程，不会轻易混乱；有利于开发权限保护；	缺点：中央服务器的单点故障。
	
		分布式版本控制工具：如git,Mercurial,Bazaar,Darcs——主要就是版本控制可以在本地进行，git比SVN多了个本地仓库；每个客户端保存的也都是整个完整的项目；SVN中央库损坏，历史版本都会没；git中央库损坏，本地库还有历史版本，远程库中可以借助历史记录恢复到之前的版本；个人理解，第一种服务器挂了，后期服务器好了，本地写好的代码也提交不上去，git的话服务器挂了，后期好了可以提交上去。
git工作机制：
	工作区：写代码的地方，代码存放在磁盘目录的位置
	暂存区：临时存储，可以是修改的，将工作区暂存的代码添加到暂存区  git add
	本地库：将暂存区的代码提交本地库，生成历史版本，删不掉了   git commit
git和代码托管中心：
代码托管中心是基于网络服务器的远程代码仓库，也称为远程库：将本地库的代码推送puss至远程库。
分为两类：
		互联网：Gitee（国外）Gitee 码云（国内网站）
		局域网：GitLab
git安装：git命令行后端——ctrl+滚轮--字体放大——输入git  --version：查看当前git版本
git常用指令：
	设置用户签名：git config --global user.name (+用户名)  git config --global user.eamil (+邮箱，最好是注册git时用的邮箱)	签名作用：区分操作者。	必须设置用户签名，否则无法提交代码
	在C盘用户里找到.gitconfig配置文件
	初始化本地库：git init——在创建的Git相关文件目录里打开git bash here，进行初始化目录的操作，即输入此指令，在此文件夹里生成.git目录（是隐藏的），输入ll -a 查看隐藏目录。
	查看本地库状态：git status——默认分支是master
	添加到暂存区：git add 文件名，vim新建文件夹
	提交到本地库：git commit -m"日志信息" 文件名
	查看历史记录：git reflog 查看详细信息：git log
	版本穿梭：git rest --hard 版本号
	：wq保存 Esc+yy复制 Esc+P粘贴ctrl+L清屏
分支：指针的运用，提高开发效率
	创建分支：git branch 分支名
	查看分支：git branch -v
	切换分支：git checkout 分支名
	把指定的分支合并到当前分支上：git merge 分支名
产生冲突：表现即为后面状态为MERGING
Git团队协作机制：
	团队内协作
	跨团队协作
	
	远程库名字和本地库一样
远程仓库操作
	查看当前所有远程地址别名：git remote -v
	起别名：git remote add 别名 远程地址
	推送本地分支上的内容到远程仓库：git push
	将远程仓库的内容克隆到本地：git clone 远程地址
	将远程库对于分支最新内容拉下来后与当前本地分支直接合并：git pull 远程库地址别名 远程分支名
别名既可以拉取也可以推送

